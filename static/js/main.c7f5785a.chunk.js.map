{"version":3,"sources":["components/Card.js","components/CardList.js","components/Header.js","components/Restart.js","components/Scoreboard.js","App.js","index.js"],"names":["CardWrapper","styled","button","Card","children","handleClick","id","onClick","CardGrid","section","CardImage","img","CardDescription","p","CardList","scoreBoard","setScoreBoard","highestScore","setHighestScore","characters","setCharacters","setGameLost","setGameWon","gameWon","newCharacters","index","findIndex","value","clicked","useEffect","shuffledCharacters","i","length","j","Math","floor","random","shuffleCharacters","map","character","src","image","alt","name","Header","header","Title","h1","Paragraph","props","small","Wrapper","div","Button","Container","h2","Text","Restart","reset","title","ScoreBar","primary","Scoreboard","Overlay","App","useState","gameLost","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c7f5785a.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst CardWrapper = styled.button`\r\n    flex: 0 1 200px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    background: linear-gradient(180deg, rgba(91, 25, 86, 1) 50%, rgba(0, 0, 0, 1) 95%);\r\n    padding: 1rem;\r\n    border-radius: 10px;\r\n    color: white;\r\n    cursor: pointer;\r\n    border: transparent;\r\n    transition: transform 0.3s ease;\r\n    &:hover {\r\n        transform: scale(1.1);\r\n    }\r\n    &:focus {\r\n        outline: 2px dotted white;\r\n    }\r\n`\r\n\r\nconst Card = ({ children, handleClick, id }) => {\r\n    return (\r\n        <CardWrapper onClick={() => handleClick(id)}>\r\n        {children}\r\n        </CardWrapper>\r\n        \r\n    )\r\n}\r\nexport default Card\r\n","import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport Card from './Card'\r\n\r\nconst CardGrid = styled.section`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n    gap: 2rem;\r\n    margin: 2rem;\r\n`\r\n\r\nconst CardImage = styled.img`\r\n    object-fit: cover;\r\n    max-width: 100%;\r\n    flex: 1;\r\n`\r\n\r\nconst CardDescription = styled.p`\r\n    position:relative;\r\n    margin: 1rem 0 0 0;\r\n    font-size: 1.2rem;\r\n    font-weight: 800;\r\n`\r\n\r\n\r\nconst CardList = ({ scoreBoard, setScoreBoard, highestScore, setHighestScore, characters, setCharacters, setGameLost, gameWon, setGameWon } ) => {\r\n\r\n    const shuffleCharacters = () => {\r\n        const shuffledCharacters = [...characters];\r\n        for (let i = shuffledCharacters.length - 1; i > 0; i--) {\r\n            let j = Math.floor(Math.random() * (i + 1));\r\n            [shuffledCharacters[i], shuffledCharacters[j]] = [shuffledCharacters[j], shuffledCharacters[i]];\r\n        }\r\n        setCharacters(shuffledCharacters);  \r\n    }\r\n\r\n    const handleClick = (id) => {\r\n        const newCharacters = [...characters];\r\n        const index = newCharacters.findIndex(value => value.id === id);\r\n        \r\n        if (!newCharacters[index].clicked === true) {\r\n            newCharacters[index].clicked = true;\r\n            setScoreBoard(scoreBoard + 1);\r\n        } else {\r\n            setGameLost(true);\r\n        }\r\n        setCharacters(newCharacters);\r\n    }\r\n\r\n    useEffect(() => {\r\n        shuffleCharacters();\r\n        if (scoreBoard > highestScore) {\r\n            setHighestScore(scoreBoard);\r\n        }\r\n\r\n        if (scoreBoard >= characters.length) {\r\n            setGameWon(true);\r\n        }\r\n    }, [scoreBoard])\r\n\r\n    return (\r\n        <CardGrid>\r\n            {characters.map(character => \r\n                <Card key={character.id} id={character.id} handleClick={handleClick}>\r\n                    <CardImage src={character.image} alt=\"\" />\r\n                    <CardDescription>{character.name}</CardDescription>\r\n                </Card>)}\r\n        </CardGrid>\r\n    )\r\n}\r\n\r\nexport default CardList\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\n\r\nconst Header = styled.header`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    padding: 1rem;\r\n`\r\nconst Title = styled.h1`\r\n    padding: 0;\r\n    margin: 0;\r\n    font-size: 4rem;\r\n    text-align: center;\r\n    font-weight: 800;\r\n    text-transform: uppercase;\r\n    background: -webkit-linear-gradient(-86deg, #e01111 5%, #e01111 10%, #e27005 91%);\r\n    -webkit-background-clip: text;\r\n    background-clip: text;\r\n    -webkit-text-stroke: 4px transparent;\r\n    color: #000;\r\n`\r\nconst Paragraph = styled.p`\r\n    margin: 1rem 0 0 0;\r\n    font-size: ${props => props.small ? '1rem' : '2rem'};\r\n    font-weight: 600;\r\n`\r\n\r\nconst header = () => {\r\n    return (\r\n        <Header>\r\n            <Title>The Wolf Among Us</Title>\r\n            <Paragraph>Memory Game</Paragraph>\r\n            <Paragraph small>How to play: Click on every character only once, if you click twice you lose!</Paragraph>\r\n        </Header>\r\n    )\r\n}\r\n\r\nexport default header\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Wrapper = styled.div`\r\n    position: fixed;\r\n    left: 0;\r\n    top: 0;\r\n    min-height: 100vh;\r\n    min-width: 100vw;\r\n    display: grid;\r\n    place-content: center;\r\n    z-index: 1;\r\n`\r\n\r\nconst Button = styled.button`\r\n    padding: 0.5em 1em;\r\n    border: 1px solid #963199;\r\n    cursor: pointer;\r\n    background: #963199;\r\n    color: white;\r\n    box-shadow: 0 0.4em #712574;\r\n    transition: transform 0.3s ease;\r\n    &:hover {\r\n        transform: scale(1.1);\r\n    }\r\n`\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 1rem;\r\n    text-align: center;\r\n    padding: 2rem;\r\n    background: white;\r\n    color: black;\r\n    border: 4px solid #963199;\r\n`\r\n\r\nconst Title = styled.h2`\r\n    margin: 0;\r\n    padding: 0;\r\n`\r\n\r\nconst Text = styled.p`\r\n    margin: 0;\r\n    padding: 0;\r\n`\r\n\r\nconst Restart = ({reset, title}) => {\r\n    return (\r\n        <Wrapper>\r\n            <Container>\r\n                <Title>{title}</Title>\r\n                <Text>Do you want to restart?</Text>\r\n                <Button onClick={() => reset()}>\r\n                    Restart\r\n                </Button>\r\n            </Container>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default Restart\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\n\r\nconst Wrapper = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    gap: 0.5rem;\r\n    `\r\n\r\nconst ScoreBar = styled.p`\r\n    padding: 0.5rem 1rem;\r\n    background: ${props => props.primary ? '#4c2fd7' : 'rgba(91,25,86,1)'};\r\n    border-radius: 5px;\r\n    `\r\n\r\nconst Scoreboard = ({ scoreBoard, highestScore }) => {\r\n\r\n    return (\r\n        <Wrapper>\r\n            <ScoreBar>Score: {scoreBoard}</ScoreBar>\r\n            <ScoreBar primary>Highscore: {highestScore}</ScoreBar>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default Scoreboard\r\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport CardList from './components/CardList';\nimport Header from './components/Header';\nimport Restart from './components/Restart';\nimport Scoreboard from './components/Scoreboard';\n\nconst Overlay = styled.div`\n    position: fixed;\n    left: 0;\n    top: 0;\n    min-height: 100vh;\n    min-width: 100vw;\n    overflow: hidden;\n    display: grid;\n    place-content: center;\n    background: #000;\n    opacity: 0.6;\n    z-index: 0;\n`\n\n\nfunction App() {\n\n  const charactersData = [\n    { id: 1, name: \"Bigby Wolf\", image: './images/bigby.webp', clicked: false },\n    { id: 2, name: \"Snow White\", image: './images/snow-white.webp', clicked: false },\n    { id: 3, name: \"Bluebeard\", image: './images/bluebeard.webp', clicked: false },\n    { id: 4, name: \"Bufkin\", image: './images/bufkin.webp', clicked: false },\n    { id: 5, name: \"Colin\", image: './images/colin.webp', clicked: false },\n    { id: 6, name: \"Ichabod Crane\", image: './images/crane.webp', clicked: false },\n    { id: 7, name: \"Crooked Man\", image: './images/Crooked_Man.webp', clicked: false },\n    { id: 8, name: \"Faith\", image: './images/Faith.webp', clicked: false },\n    { id: 9, name: \"Flycatcher\", image: './images/flycatcher.webp', clicked: false },\n    { id: 10, name: \"Aunty Greenleaf\", image: './images/greenleaf.webp', clicked: false },\n    { id: 11, name: \"Holly\", image: './images/holly.webp', clicked: false },\n    { id: 12, name: \"Jack Horner\", image: './images/jack.webp', clicked: false },\n    { id: 13, name: \"Bloody Mary\", image: './images/mary.webp', clicked: false },\n    { id: 14, name: \"Nerissa\", image: './images/nerissa.webp', clicked: false },\n    { id: 15, name: \"Mr. Toad\", image: './images/toad.webp', clicked: false },\n  ];\n\n  const [scoreBoard, setScoreBoard] = useState(0);\n  const [highestScore, setHighestScore] = useState(0);\n  const [gameLost, setGameLost] = useState(false);\n  const [gameWon, setGameWon] = useState(false);\n  const [characters, setCharacters] = useState(charactersData);\n\n\n  const reset = () => {\n    const newCharacters = characters.map(character => {\n      const clicked = character.clicked = false;\n      return {...character, clicked};\n    });\n    setCharacters(newCharacters);\n    setGameLost(false);\n    setGameWon(false);\n    setScoreBoard(0);\n  }\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <main>\n        <Scoreboard scoreBoard={scoreBoard} highestScore={highestScore} />\n        <CardList scoreBoard={scoreBoard} setScoreBoard={setScoreBoard} \n        highestScore={highestScore} setHighestScore={setHighestScore} \n        setGameLost={setGameLost} characters={characters} \n          setCharacters={setCharacters} gameWon={gameWon} setGameWon={setGameWon}/>\n      </main>\n      {gameLost ? <Restart reset={reset} title={\"😲 Whoops, you lost! 😲\"} /> : null}\n      {gameLost || gameWon ? <Overlay /> : null}\n      {gameWon ? <Restart reset={reset} title={\"👍🏻🎉 Congratulations! You won! 🎉👍🏻\"}/> : null}\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}